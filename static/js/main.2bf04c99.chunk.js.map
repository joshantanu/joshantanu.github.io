{"version":3,"sources":["components/MonthView.js","firebase/config.js","App.js","reportWebVitals.js","index.js"],"names":["React","memo","MonthView","props","monthData","rateBuff","rateCow","undefined","days","Object","keys","totalCow","totalBuff","forEach","day","eval","cow","buff","totalCowBill","totalBuffBill","grantTotalBill","className","map","index","colSpan","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","monthNames","App","useState","milkRatib","setmilkRatib","updateform","setUpdateform","Date","date","setDate","otherSize","width","buildDateObj","thisDate","newDate","dmy","getDate","month","getMonth","year","getFullYear","selectedDMY","setSelectedDMY","db","firestore","fetchData","a","doc","get","then","querySnapshot","members","data","useEffect","getFormData","obj","formData","target","name","value","onChange","selected","maxDate","type","onClick","bind","this","defaultChecked","size","style","set","merge","docRef","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wIAAA,sWAEeA,mEAAMC,MAAK,SAASC,UAAUC,OAM3C,IAAQC,UAAiCD,MAAjCC,UAAWC,SAAsBF,MAAtBE,SAAUC,QAAYH,MAAZG,QAE7B,QAAkBC,IAAdH,UAAyB,CAC3B,IAAII,KAAOC,OAAOC,KAAKN,WAGnBO,SAAW,EACXC,UAAY,EAChBJ,KAAKK,SAAQ,SAACC,KACZH,UAAYI,KAAKX,UAAUU,KAAKE,KAChCJ,WAAaG,KAAKX,UAAUU,KAAKG,SAGnC,IAAMC,aAAeP,SAAWL,QAC1Ba,cAAgBP,UAAYP,SAC5Be,eAAiBF,aAAeC,cACtC,OACE,6HACE,qEAAOE,UAAU,QAAjB,UACE,6EACE,4EACE,mFACA,iEAAIA,UAAU,cAAd,iBACA,iEAAIA,UAAU,cAAd,2BAGJ,+EACGb,KAAKc,KAAI,SAACR,EAAKS,GAAN,OACR,4EACE,0EAAKT,IACL,iEAAIO,UAAU,cAAd,SAA6BjB,UAAUU,GAAKE,MAC5C,iEAAIK,UAAU,cAAd,SAA6BjB,UAAUU,GAAKG,SAHrCM,MAMX,4EACE,2FACA,iEAAIF,UAAU,cAAd,SAA6BV,WAC7B,iEAAIU,UAAU,cAAd,SAA6BT,eAE/B,4EACE,mFACA,iEAAIS,UAAU,cAAd,SAA6BlB,MAAMG,UACnC,iEAAIe,UAAU,cAAd,SAA6BlB,MAAME,cAErC,4EACE,yFACA,iEAAIgB,UAAU,cAAd,SAA6BH,eAC7B,iEAAIG,UAAU,cAAd,SAA6BF,mBAE/B,4EACE,0FACA,iEAAIK,QAAS,EAAGH,UAAU,oCAA1B,SACE,0EAAKD,8BAOZ,OAAO,S,kLCzDhBK,IAASC,cATM,CACXC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,cACnBC,MAAO,6CAIIP,QAAf,E,OCNMQ,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAgKaC,MA7Jf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,CAACnB,IAAI,EAAEC,KAAK,IAAzD,mBAAOqB,EAAP,KAAmBC,EAAnB,KACA,EAAwBJ,mBAAS,IAAIK,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAY,CAACC,MAAM,IACnBC,EAAe,SAAAC,GACnB,IAAMC,EAAU,IAAIP,KAAKM,GACrBE,EAAM,GAIV,OAHAA,EAAIP,KAAOM,EAAQE,UACnBD,EAAIE,MAAQjB,EAAWc,EAAQI,YAC/BH,EAAII,KAAOL,EAAQM,cACZ,eAAIL,IAEb,EAAsCb,mBAASU,EAAaJ,IAA5D,mBAAOa,EAAP,KAAoBC,EAApB,KACMC,EAAK/B,EAASgC,YACdC,EAAS,uCAAG,sBAAAC,EAAA,sDAChBH,EAAGI,IAAI,cACJC,MACAC,MAAK,SAACC,GACL,IAAIC,EAAUD,EAAcE,OAI5B5B,EAAa2B,MARD,2CAAH,qDAWfE,qBAAU,WACRR,MACC,IAGH,IAmBMS,EAAc,SAACC,GACnB,IAAIC,EAAW,GAEfA,EAAUD,EAAIE,OAAOC,MAAQH,EAAIE,OAAOE,MAGxCjC,EAAc,2BAAID,GAAc+B,KAWlC,OACE,qCACC,iDACK,8CACA,8BAAK,cAAC,IAAD,CAAYI,SAbR,SAAA3B,GACf,IAAME,EAAMH,EAAaC,GAEzBJ,EAAQI,GACRS,EAAeP,IAS4B0B,SAAUjC,EAAOkC,QAAS,IAAInC,SACnE,uBAAOnB,UAAU,QAAjB,SAAyB,kCAC3B,+BACE,qCACA,6CAEF,+BACE,+BACA,uBACIuD,KAAK,QACLJ,MAAM,MACND,KAAK,MACLM,QAASV,EAAYW,KAAKC,QAL9B,SAMU,uBACR,uBACEH,KAAK,QACLJ,MAAM,IACND,KAAK,MACLS,gBAAc,EACdH,QAASV,EAAYW,KAAKC,QAZ9B,OAaQ,uBACN,uBACEH,KAAK,QACLJ,MAAM,MACND,KAAK,MACLM,QAASV,EAAYW,KAAKC,QAlB9B,SAmBU,uBACR,uBACEH,KAAK,QACLJ,MAAM,IACND,KAAK,MACLM,QAASV,EAAYW,KAAKC,QAxB9B,MA0BO,uBACL,uBACEH,KAAK,QACLJ,MAAM,IACND,KAAK,MACLM,QAASV,EAAYW,KAAKC,QA/B9B,SAiCE,uBAAOH,KAAK,SAASL,KAAK,MAAMU,KAAK,IAAIC,MAAOvC,EAAW8B,SAAUN,EAAYW,KAAKC,WAExF,+BACA,uBACIH,KAAK,QACLJ,MAAM,MACND,KAAK,OACLM,QAASV,EAAYW,KAAKC,QAL9B,SAMU,uBACR,uBACEH,KAAK,QACLJ,MAAM,IACND,KAAK,OACLS,gBAAc,EACdH,QAASV,EAAYW,KAAKC,QAZ9B,OAaQ,uBACN,uBACEH,KAAK,QACLJ,MAAM,MACND,KAAK,OACLM,QAASV,EAAYW,KAAKC,QAlB9B,SAmBU,uBACR,uBACEH,KAAK,QACLJ,MAAM,IACND,KAAK,OACLM,QAASV,EAAYW,KAAKC,QAxB9B,MAyBO,uBACL,uBACEH,KAAK,QACLJ,MAAM,IACND,KAAK,OACLM,QAASV,EAAYW,KAAKC,QA9B9B,SAgCE,uBAAOH,KAAK,SAASL,KAAK,OAAOU,KAAK,IAAIC,MAAOvC,EAAW8B,SAAUN,EAAYW,KAAKC,mBAK7F,wBAAQF,QAvHI,WACdrB,EAAGI,IAAH,gBAAgBN,EAAYF,OACzB+B,IADH,eAGO7B,EAAYJ,MAHnB,eAISI,EAAYb,KAAO,CAClBzB,IAAKsB,EAAWtB,IAChBC,KAAMqB,EAAWrB,QAIvB,CAAEmE,OAAO,IAEVtB,MAAK,SAACuB,GACLC,MAAM,+BACN5B,QAwGF,oBAEA,cAACxD,EAAA,EAAD,CAAWE,UAAWgC,EAAUkB,EAAYJ,OAAQ5C,QAAS,GAAID,SAAU,SChKlEkF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2bf04c99.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.memo(function MonthView(props) {\r\n  // const [totalBuffBill,settotalBuffBill] = useState(0);\r\n  // const [totalCowBill,settotalCowBill] = useState(0);\r\n  // const [rateCow,setrateCow] = useState(0);\r\n  // const [rateBuff,setrateBuff] = useState(0);\r\n\r\n  const { monthData, rateBuff, rateCow } = props;\r\n\r\n  if (monthData !== undefined) {\r\n    let days = Object.keys(monthData);\r\n    // console.log(\"keys:\", days);\r\n\r\n    let totalCow = 0;\r\n    let totalBuff = 0;\r\n    days.forEach((day) => {\r\n      totalCow += eval(monthData[day].cow);\r\n      totalBuff += eval(monthData[day].buff);\r\n    });\r\n\r\n    const totalCowBill = totalCow * rateCow;\r\n    const totalBuffBill = totalBuff * rateBuff;\r\n    const grantTotalBill = totalCowBill + totalBuffBill;\r\n    return (\r\n      <>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th className=\"text-center\">Cow</th>\r\n              <th className=\"text-center\">Buffello</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {days.map((day, index) => (\r\n              <tr key={index}>\r\n                <td>{day}</td>\r\n                <td className=\"text-center\">{monthData[day].cow}</td>\r\n                <td className=\"text-center\">{monthData[day].buff}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <th>Total Liters</th>\r\n              <th className=\"text-center\">{totalCow}</th>\r\n              <th className=\"text-center\">{totalBuff}</th>\r\n            </tr>\r\n            <tr>\r\n              <th>Rate</th>\r\n              <th className=\"text-center\">{props.rateCow}</th>\r\n              <th className=\"text-center\">{props.rateBuff}</th>\r\n            </tr>\r\n            <tr>\r\n              <th>Total Bill</th>\r\n              <th className=\"text-center\">{totalCowBill}</th>\r\n              <th className=\"text-center\">{totalBuffBill}</th>\r\n            </tr>\r\n            <tr>\r\n              <th>Grant Total</th>\r\n              <th colSpan={2} className=\"text-center bg-success text-white\">\r\n                <h3>{grantTotalBill}</h3>\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  } else return null;\r\n});\r\n","import firebase from 'firebase';\r\nconst config = {\r\n    apiKey: \"AIzaSyCR7va4fDp1vFeMaYbRKXg03iOzzYAoHUk\",\r\n    authDomain: \"ddapp-e3389.firebaseapp.com\",\r\n    projectId: \"ddapp-e3389\",\r\n    storageBucket: \"ddapp-e3389.appspot.com\",\r\n    messagingSenderId: \"81508684530\",\r\n    appId: \"1:81508684530:web:e07e8d90072ec63236766b\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\nimport DatePicker from 'sassy-datepicker';\nimport MonthView from \"./components/MonthView\";\nimport firebase from \"./firebase/config\";\n\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nfunction App() {\n  const [milkRatib, setmilkRatib] = useState([]);\n  const [updateform, setUpdateform] = useState({cow:1,buff:1});\n  const [date, setDate] = useState(new Date());\n  const otherSize = {width:50}\n  const buildDateObj = thisDate => {\n    const newDate = new Date(thisDate);\n    let dmy = {};\n    dmy.date = newDate.getDate();\n    dmy.month = monthNames[newDate.getMonth()];\n    dmy.year = newDate.getFullYear();\n    return {...dmy}\n  }\n  const [selectedDMY, setSelectedDMY] = useState(buildDateObj(date));\n  const db = firebase.firestore();\n  const fetchData = async () => {\n    db.doc(\"appDB/2021\")\n      .get()\n      .then((querySnapshot) => {\n        let members = querySnapshot.data();\n        //let dt = new Date();\n        //let month = monthNames[dt.getMonth()];\n        // console.log(members[month][\"2\"])\n        setmilkRatib(members);\n      });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  \n  const setData = () => {\n    db.doc(`appDB/${selectedDMY.year}`)\n      .set(\n        {\n          [selectedDMY.month]: {\n            [selectedDMY.date]: {\n              cow: updateform.cow,\n              buff: updateform.buff,\n            },\n          },\n        },\n        { merge: true }\n      )\n      .then((docRef) => {\n        alert(\"Data Successfully Submitted\");\n        fetchData();\n      });\n  };\n\n  const getFormData = (obj) =>{\n    let formData = {}\n   \n    formData.[obj.target.name] = obj.target.value \n   // console.log(formData);\n\n    setUpdateform({...updateform,...formData});\n  }\n  const onChange = thisDate => {\n    const dmy = buildDateObj(thisDate)\n    //newDate = ${newDate.getFullYear()} ${monthNames[newDate.getMonth()]} ${newDate.getDate()}`);\n    setDate(thisDate);\n    setSelectedDMY(dmy)\n\n  };\n\n\n  return (\n    <>\n     <h2>Doodh Ratib App</h2>\n          <div>Select Date</div>\n          <div><DatePicker onChange={onChange} selected={date}  maxDate={new Date()} /></div>\n          <table className=\"table\"><tbody>\n        <tr>\n          <th>Cow</th>\n          <th>Buffello</th>\n        </tr>\n        <tr>\n          <td>\n          <input\n              type=\"radio\"\n              value=\"0.5\"\n              name=\"cow\"\n              onClick={getFormData.bind(this)}\n            />  0.5 <br/>\n            <input\n              type=\"radio\"\n              value=\"1\"\n              name=\"cow\"\n              defaultChecked\n              onClick={getFormData.bind(this)}\n            />  1 <br/>\n            <input\n              type=\"radio\"\n              value=\"1.5\"\n              name=\"cow\"\n              onClick={getFormData.bind(this)}\n            />  1.5 <br/>\n            <input\n              type=\"radio\"\n              value=\"2\"\n              name=\"cow\"\n              onClick={getFormData.bind(this)}\n               \n            />  2<br />\n            <input\n              type=\"radio\"\n              value=\"0\"\n              name=\"cow\"\n              onClick={getFormData.bind(this)}\n            /> Other \n            <input type=\"number\" name=\"cow\" size=\"2\" style={otherSize} onChange={getFormData.bind(this)} />\n          </td>\n          <td>\n          <input\n              type=\"radio\"\n              value=\"0.5\"\n              name=\"buff\"\n              onClick={getFormData.bind(this)}\n            />  0.5 <br/>\n            <input\n              type=\"radio\"\n              value=\"1\"\n              name=\"buff\"\n              defaultChecked\n              onClick={getFormData.bind(this)}\n            />  1 <br/>\n            <input\n              type=\"radio\"\n              value=\"1.5\"\n              name=\"buff\"\n              onClick={getFormData.bind(this)}\n            />  1.5 <br/>\n            <input\n              type=\"radio\"\n              value=\"2\"\n              name=\"buff\"\n              onClick={getFormData.bind(this)}\n            /> 2 <br />\n            <input\n              type=\"radio\"\n              value=\"0\"\n              name=\"buff\"\n              onClick={getFormData.bind(this)}\n            /> Other  \n            <input type=\"number\" name=\"buff\" size=\"2\" style={otherSize} onChange={getFormData.bind(this)} />\n          </td>\n        </tr></tbody>\n      </table>\n\n      <button onClick={setData}>SUBMIT</button>\n\n      <MonthView monthData={milkRatib[selectedDMY.month]} rateCow={50} rateBuff={60} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}