{"version":3,"sources":["components/MonthView.js","firebase/config.js","AppConst.js","components/Qty.js","App.js","reportWebVitals.js","index.js"],"names":["React","memo","MonthView","props","monthData","rateBuff","rateCow","undefined","days","Object","keys","totalCow","totalBuff","forEach","day","eval","cow","buff","totalCowBill","totalBuffBill","grantTotalBill","className","map","index","colSpan","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","denomination","monthNames","milkType","controlClick","itm","i","type","value","defaultChecked","name","onClick","size","style","width","onChange","App","useState","ratibData","setratibData","formData","setformData","Date","date","setDate","buildDateObj","thisDate","newDate","dmy","getDate","month","getMonth","year","getFullYear","selectedDMY","setSelectedDMY","db","firestore","fetchData","a","doc","get","then","querySnapshot","members","data","useEffect","getFormData","obj","thisformData","target","selected","maxDate","console","log","set","merge","docRef","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dee8d5bd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.memo(function MonthView(props) {\r\n  // const [totalBuffBill,settotalBuffBill] = useState(0);\r\n  // const [totalCowBill,settotalCowBill] = useState(0);\r\n  // const [rateCow,setrateCow] = useState(0);\r\n  // const [rateBuff,setrateBuff] = useState(0);\r\n\r\n  const { monthData, rateBuff, rateCow } = props;\r\n\r\n  if (monthData !== undefined) {\r\n    let days = Object.keys(monthData);\r\n    // console.log(\"keys:\", days);\r\n\r\n    let totalCow = 0;\r\n    let totalBuff = 0;\r\n    days.forEach((day) => {\r\n      totalCow += eval(monthData[day].cow);\r\n      totalBuff += eval(monthData[day].buff);\r\n    });\r\n\r\n    const totalCowBill = totalCow * rateCow;\r\n    const totalBuffBill = totalBuff * rateBuff;\r\n    const grantTotalBill = totalCowBill + totalBuffBill;\r\n    return (\r\n      <>\r\n      <hr />\r\n      <h4 className=\"text-center\">Monthly View</h4>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th className=\"text-center\">Cow</th>\r\n              <th className=\"text-center\">Buffello</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {days.map((day, index) => (\r\n              <tr key={index}>\r\n                <td>{day}</td>\r\n                <td className=\"text-center\">{monthData[day].cow}</td>\r\n                <td className=\"text-center\">{monthData[day].buff}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <th>Total Liters</th>\r\n              <th className=\"text-center\">{totalCow}</th>\r\n              <th className=\"text-center\">{totalBuff}</th>\r\n            </tr>\r\n            <tr>\r\n              <th>Rate</th>\r\n              <th className=\"text-center\">{props.rateCow}</th>\r\n              <th className=\"text-center\">{props.rateBuff}</th>\r\n            </tr>\r\n            <tr>\r\n              <th>Total Bill</th>\r\n              <th className=\"text-center\">{totalCowBill}</th>\r\n              <th className=\"text-center\">{totalBuffBill}</th>\r\n            </tr>\r\n            <tr>\r\n              <th>Grant Total</th>\r\n              <th colSpan={2} className=\"text-center bg-success text-white\">\r\n                <h3>&#8377; {grantTotalBill}</h3>\r\n              </th>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  } else return null;\r\n});\r\n","import firebase from 'firebase';\r\nconst config = {\r\n    apiKey: \"AIzaSyCR7va4fDp1vFeMaYbRKXg03iOzzYAoHUk\",\r\n    authDomain: \"ddapp-e3389.firebaseapp.com\",\r\n    projectId: \"ddapp-e3389\",\r\n    storageBucket: \"ddapp-e3389.appspot.com\",\r\n    messagingSenderId: \"81508684530\",\r\n    appId: \"1:81508684530:web:e07e8d90072ec63236766b\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\nexport default firebase;","\r\nexport const denomination = [\r\n    \"0\",\r\n    \"0.5\",\r\n    \"1\",\r\n    \"1.5\",\r\n    \"2\"\r\n];\r\n\r\nexport const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];","import React from \"react\";\r\nimport { denomination } from \"../AppConst\";\r\n\r\nexport default React.memo(function Qty(props) {\r\n  const { milkType, controlClick } = props;\r\n  const otherSize = { width: 50 };\r\n\r\n  return (\r\n    <>\r\n      {denomination.map((itm, i) => (\r\n        <div key={i}>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value={itm}\r\n              defaultChecked={(itm===\"1\")}\r\n              name={milkType}\r\n              onClick={controlClick}\r\n            /> {itm}\r\n          </label>\r\n        </div>\r\n      ))}\r\n      <div>\r\n        <input type=\"radio\" value=\"0\" name={milkType} onClick={controlClick} /> Other \r\n        <input\r\n          type=\"number\"\r\n          name={milkType}\r\n          size=\"2\"     \r\n          style={otherSize}\r\n          onChange={controlClick}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n})\r\n","import React, { useEffect, useState } from \"react\";\nimport DatePicker from 'sassy-datepicker';\nimport MonthView from \"./components/MonthView\";\nimport firebase from \"./firebase/config\";\nimport { monthNames } from \"./AppConst\";\nimport Qty from \"./components/Qty\";\n\n\nfunction App() {\n  const [ratibData, setratibData] = useState([]);\n  const [formData, setformData] = useState({ cow: 1, buff: 1 });\n  const [date, setDate] = useState(new Date());\n \n  const buildDateObj = thisDate => {\n    const newDate = new Date(thisDate);\n    let dmy = {};\n    dmy.date = newDate.getDate();\n    dmy.month = monthNames[newDate.getMonth()];\n    dmy.year = newDate.getFullYear();\n    return { ...dmy }\n  }\n  const [selectedDMY, setSelectedDMY] = useState(buildDateObj(date));\n  const db = firebase.firestore();\n  const fetchData = async () => {\n    db.doc(`appDB/${selectedDMY.year}`)\n      .get()\n      .then((querySnapshot) => {\n        let members = querySnapshot.data();\n        //let dt = new Date();\n        //let month = monthNames[dt.getMonth()];\n        // console.log(members[month][\"2\"])\n        setratibData(members);\n      });\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n\n  const setData = () => {\n    db.doc(`appDB/${selectedDMY.year}`)\n      .set(\n        {\n          [selectedDMY.month]: {\n            [selectedDMY.date]: {\n              cow: formData.cow,\n              buff: formData.buff,\n            },\n          },\n        },\n        { merge: true }\n      )\n      .then((docRef) => {\n        alert(\"Data Successfully Submitted\");\n        fetchData();\n      });\n  };\n\n  const getFormData = (obj) => {\n    let thisformData = {}\n\n    thisformData.[obj.target.name] = obj.target.value\n    // console.log(formData);\n\n    setformData({ ...formData, ...thisformData });\n  }\n  const onDateChange = thisDate => {\n    const dmy = buildDateObj(thisDate)\n    //newDate = ${newDate.getFullYear()} ${monthNames[newDate.getMonth()]} ${newDate.getDate()}`);\n    setDate(thisDate);\n    setSelectedDMY(dmy)\n\n  };\n\n\n  return (\n    <>\n      <h3>Ashtavinayak Milk App</h3>\n      <label>Select Date</label>\n      <div className=\"text-center\"><DatePicker onChange={onDateChange} selected={date} maxDate={new Date()} /></div>\n      <br />\n      {console.log(formData)}\n      <table className=\"table\"><tbody>\n        <tr>\n          <th>Cow</th>\n          <th>Buffello</th>\n        </tr>\n        <tr>\n          <td>\n           <Qty milkType=\"cow\" controlClick={getFormData} />\n          </td>\n          <td>\n          <Qty milkType=\"buff\" controlClick={getFormData} />\n          </td>\n        </tr></tbody>\n      </table>\n      <div className=\"text-center\">\n        <button onClick={setData} className=\"btn btn-primary\">SUBMIT</button>\n      </div>\n      <div><br /></div>\n      <MonthView monthData={ratibData[selectedDMY.month]} rateCow={50} rateBuff={60} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}